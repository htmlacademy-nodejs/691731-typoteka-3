'use strict';

const express = require(`express`);
const request = require(`supertest`);
const Sequelize = require(`sequelize`);

const initDB = require(`../lib/init-db`);
const search = require(`./search`);
const SearchService = require(`../data-service/search`);
const {HttpCode} = require(`../../constants`);

const mockCategories = [
  `Деревья`,
  `За жизнь`,
  `Без рамки`,
  `Разное`,
  `IT`,
  `Музыка`,
  `Кино`,
  `Программирование`,
  `Железо`
];

const mockData = [
  {
    "title": `Лучшие рок-музыканты 20-века`,
    "createdDate": `Mon, 11 Jan 2021 20:18:14 GMT`,
    "announce": `Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Простые ежедневные упражнения помогут достичь успеха. Собрать камни бесконечности легко, если вы прирожденный герой. Он написал больше 30 хитов.`,
    "fullText": `Из под его пера вышло 8 платиновых альбомов. Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Первая большая ёлка была установлена только в 1938 году. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Простые ежедневные упражнения помогут достичь успеха. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Ёлки — это не просто красивое дерево. Это прочная древесина. Собрать камни бесконечности легко, если вы прирожденный герой. Достичь успеха помогут ежедневные повторения.`,
    "categories": [`IT`],
    "comments": [
      {
        "text": `Это где ж такие красоты?`
      },
      {
        "text": `Согласен с автором!`
      },
      {
        "text": `Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`
      }
    ]
  },
  {
    "title": `Как достигнуть успеха не вставая с кресла`,
    "createdDate": `Sat, 09 Jan 2021 16:55:26 GMT`,
    "announce": `Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Он написал больше 30 хитов.`,
    "fullText": `Золотое сечение — соотношение двух величин, гармоническая пропорция. Первая большая ёлка была установлена только в 1938 году. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Собрать камни бесконечности легко, если вы прирожденный герой. Ёлки — это не просто красивое дерево. Это прочная древесина. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Это один из лучших рок-музыкантов.`,
    "categories": [`Разное`],
    "comments": [
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Плюсую, но слишком много буквы!`
      },
      {
        "text": `Совсем немного...`
      },
      {
        "text": `Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`
      },
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Планируете записать видосик на эту тему? Совсем немного...`
      }
    ]
  },
  {
    "title": `Лучшие рок-музыканты 20-века`,
    "createdDate": `Tue, 05 Jan 2021 00:59:26 GMT`,
    "announce": `Первая большая ёлка была установлена только в 1938 году. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Простые ежедневные упражнения помогут достичь успеха.`,
    "fullText": `Это один из лучших рок-музыкантов. Достичь успеха помогут ежедневные повторения. Из под его пера вышло 8 платиновых альбомов. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Простые ежедневные упражнения помогут достичь успеха. Как начать действовать? Для начала просто соберитесь.`,
    "categories": [`Музыка`],
    "comments": [
      {
        "text": `Плюсую, но слишком много буквы!`
      },
      {
        "text": `Мне кажется или я уже читал это где-то?`
      },
      {
        "text": `Мне кажется или я уже читал это где-то? Согласен с автором! Плюсую, но слишком много буквы!`
      }
    ]
  },
  {
    "title": `Как собрать камни бесконечности`,
    "createdDate": `Fri, 08 Jan 2021 04:54:47 GMT`,
    "announce": `Собрать камни бесконечности легко, если вы прирожденный герой. Достичь успеха помогут ежедневные повторения. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Как начать действовать? Для начала просто соберитесь.`,
    "fullText": `Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Из под его пера вышло 8 платиновых альбомов. Простые ежедневные упражнения помогут достичь успеха. Достичь успеха помогут ежедневные повторения. Как начать действовать? Для начала просто соберитесь. Программировать не настолько сложно, как об этом говорят. Вы можете достичь всего. Стоит только немного постараться и запастись книгами.`,
    "categories": [`Разное`],
    "comments": [
      {
        "text": `Мне не нравится ваш стиль. Ощущение, что вы меня поучаете. Плюсую, но слишком много буквы! Это где ж такие красоты?`
      },
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Совсем немного... Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`
      }
    ]
  },
  {
    "title": `Лучшие рок-музыканты 20-века`,
    "createdDate": `Thu, 07 Jan 2021 06:30:31 GMT`,
    "announce": `Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Собрать камни бесконечности легко, если вы прирожденный герой. Достичь успеха помогут ежедневные повторения. Это один из лучших рок-музыкантов.`,
    "fullText": `Программировать не настолько сложно, как об этом говорят. Золотое сечение — соотношение двух величин, гармоническая пропорция. Простые ежедневные упражнения помогут достичь успеха. Достичь успеха помогут ежедневные повторения. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много. Собрать камни бесконечности легко, если вы прирожденный герой.`,
    "categories": [`Железо`],
    "comments": [
      {
        "text": `Планируете записать видосик на эту тему? Плюсую, но слишком много буквы! Это где ж такие красоты?`
      },
      {
        "text": `Плюсую, но слишком много буквы! Совсем немного...`
      }
    ]
  }
];

const SEARCH_TXT = `рок`;
const BAD_SEARCH_TXT = `Some `;
const TEST_TITLE_LIST = mockData.filter((article) => article.title.includes(SEARCH_TXT));

const mockDB = new Sequelize(`sqlite::memory:`, {logging: false});

const app = express();
app.use(express.json());

beforeAll(async () => {
  await initDB(mockDB, {categories: mockCategories, articles: mockData});
  search(app, new SearchService(mockDB));
});

describe(`Test GET /search`, () => {
  describe(`+`, () => {
    let response;

    beforeAll(async () => {
      response = await request(app)
        .get(`/search`)
        .query({
          query: SEARCH_TXT
        });
    });

    test(`Status code is 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
    test(`Articles, wich include SEARCH_TXT is founding`, () => expect(response.body.data.length).toBe(TEST_TITLE_LIST.length));
    test(`First article has correct title`, () => {
      expect(response.body.data[0].title)
        .toBe(TEST_TITLE_LIST[0].title);
    });
  });

  describe(`-`, () => {
    test(`API returns data is empty if query string isn't exist in no one articles`,
        () => request(app)
          .get(`/search`)
          .query({
            guery: BAD_SEARCH_TXT
          })
          // eslint-disable-next-line max-nested-callbacks
          .then((response) => expect(response.body.data.length).toBe(0))
    );
    test(`API return 400, when query string is absent`,
        () => request(app)
          .get(`/search`)
          .expect(HttpCode.BAD_REQUEST)
    );
  });
});
